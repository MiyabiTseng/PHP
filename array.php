<?php
#配列
//配列を使ってみよう
/*
配列の基本構文は「$配列名 = array(値１, 値2, ・・・);」のようになっています。
配列のデータには先頭から0, 1, 2, ・・・と順に「インデックス番号」が割り振られていきます。
配列のデータを取り出すには「インデックス番号」を用いて $配列名[インデックス番号] という風にします。
*/


# 配列の定義の仕方

/*
$names = array('John','Kate','Bob');　　//｀array()｀ を使わないといけないのはPHP 5.4までの話。
//index番号:     [0]     [1]    [2]
echo $names[0];
//結果：John [0]<-index番号を指定
echo $names[1];
//結果：Kate [1]<-index番号を指定
*/
?>


<?php
#新しいPHPは以下の書き方
# 配列の定義の仕方
$names = [
  1 => 'John',
  2 => 'Kate',
  3 => 'Bob'
];
//index番号:     [1]     [2]    [3]
echo $names[1];
//結果：John [1]<-index番号を指定

?>

<?php
#値の追加、上書き
/*
配列の末尾に値を追加するときは「$配列名[] = 値;」とします。
また、すでに存在するインデックス番号を指定すると、配列の値を上書きすることもできます
*/
/*
$names = array('John','Kate','Bob'); //John=>[0] Kate=>[1] Bob=>[2]
$name[] = 'Mary'; //<-配列の末尾に値を追加
echo $name[3]; //結果：Mary
$names[1] = 'Jane';//値の上書き
echo $name[1]//結果：Jane
*/

 ?>

 <?php
#練習
   // この下に配列を作ってください
 $colors = array('赤','青','黄');
 echo $colors[0];
 $colors[] = '白';
 echo $colors[3];
 ?>

 <?php
# 連想配列
//連想配列を使ってみよう
/*
連想配列は、配列と同じく複数のデータをまとめて管理するのに用いられます。
配列との違いは、個々の要素を管理するのにインデックス番号ではなく、「キー」と呼ばれる文字列などの値を指定することができる点です。
連想配列では「$配列名 = array('キー名' => '値１', ・・・);」といったように、「=>」を用いてキーと値をセットします。

＄user = array(
  'name' => 'わんこ', //コンマで区切る
  'age' => 14,
  'gender' => 'male'
);

*/
//連想配列
$user = array(
  'name' => 'わんこ', //コンマで区切る
  'age' => 14,
);
echo $user['name']; //結果：わんこ
$user['level'] = 'beginner';
//['level']->追加するキー 'begineer'->追加する値
echo $user['level'];
//'name'->キー
  ?>

<?php
#練習
/*
$scoresという連想配列を作り、

数学というキーに数字の70を、

英語というキーに数字の90を、

国語というキーに数字の80を
入れてください。

$scoresの'国語'に5を足してください。
$scoresの'国語'をechoしてください。

*/
   // この下に連想配列を作ってください
   $scores = array(
   '数学' => 70,
   '英語' => 90,
   '国語' => 80,
     );
 $scores['国語']+=5;
 echo $scores['国語'];
 ?>
